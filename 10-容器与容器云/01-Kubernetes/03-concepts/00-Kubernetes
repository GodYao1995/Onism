[TOC]

### Kubernetes

传统的部署方式是部署在物理机上, 无法限制资源、无法隔离环境(文件系统、网络、命名空间). 资源分配不方便. 虚拟化部署, 通过虚拟机的方式隔离了应用, 但是非常的消耗资源. 容器部署方式, 容器之间可以共享操作系统, 每个容器都具有自己的文件系统、CPU、内存、进程空间, 与基础架构分离, 可方便移植. 

Kubernetes 为你提供了一个可弹性运行分布式系统的框架.  Kubernetes 会满足你的扩展要求、故障转移你的应用、提供部署模式.

- [ ] 服务发现、负载均衡
- [ ] 自动部署与回滚
- [ ] 存储编排
- [ ] 自动完成装箱计算(调度到最合适的节点)
- [ ] 密钥与配置管理

#### Arch

![k8s-arch](./images/k8s-arch.svg)

#### Control Plane

控制平面组件会为集群做出全局决策, 比如资源的调度. 以及检测和响应集群事件.

##### kube-api-server

负责公开了 Kubernetes API, 负责处理接受请求的工作. 支持水平扩容.  所以访问集群的操作均是通过api-server, 并且唯一与与ETCD通信. CURD集群的资源.

##### etcd

集群的数据存储

##### kube-scheduler

##### kube-controller-manager

#### Node
